{"version":3,"sources":["components/Header.js","components/Scoreboard.js","components/Card.js","components/CardBoard.js","components/Colors.js","components/CardGame.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Scoreboard","props","score","bestScore","Card","card","selectCard","reset","cardstyle","backgroundColor","color","onClick","selected","colorName","style","CardBoard","cards","useEffect","i","length","j","Math","floor","random","shuffle","map","id","colors","CardGame","useState","setScore","bestscore","setBestscore","ColorCards","setCards","win","setWin","initialCards","winstyle","display","name","updatedCards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d461b97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = ()=>{\r\n    return(\r\n        <div className=\"header\">\r\n           <h1>Color Memory Game</h1>\r\n           <p>Get points by clicking on a color but don't click on any more than once!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Scoreboard = (props)=>{\r\n    const {score, bestScore} = props;\r\n    return(\r\n        <div className=\"scoreboard\">\r\n            <h3 className=\"currentscore\">Current Score : {score}</h3>\r\n            <h3 className=\"bestscore\">Best Score : {bestScore}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard;","import React from \"react\";\r\n\r\nconst Card = (props)=>{\r\n    const {card, selectCard, reset} = props;\r\n    const cardstyle = {\r\n        backgroundColor : `${card.color}`\r\n    };\r\n\r\n    const clickCard = ()=>{\r\n        if(card.selected){\r\n            reset();\r\n        }\r\n        else{\r\n            selectCard(card.colorName);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"card\" onClick={clickCard} style={cardstyle}>\r\n            <p>{card.colorName}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardBoard = (props)=>{\r\n    const {cards, selectCard, reset} = props;\r\n    \r\n    const shuffle = ()=>{\r\n        for (let i = cards.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [cards[i], cards[j]] = [cards[j], cards[i]];\r\n        }\r\n        }\r\n\r\n    useEffect(() => {\r\n        shuffle();\r\n    })\r\n\r\n    return(\r\n        <div className=\"card-grid\">\r\n            {cards.map((card) => {\r\n                return <Card \r\n                card={card} \r\n                key={card.id}\r\n                reset = {reset}\r\n                selectCard = {selectCard}\r\n                >\r\n                </Card>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardBoard;","const colors = [\r\n    {\r\n        id:1,\r\n        colorName: \"Orange\",\r\n        color: \"#ffa500\",\r\n        selected:false,\r\n    },\r\n    {\r\n        id:2,\r\n        colorName : \"Yellow\",\r\n        color: \"#ffff00\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:3,\r\n        colorName: \"Pink\",\r\n        color: \"#ffc0cb\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:4,\r\n        colorName:\"Red\",\r\n        color: \"#ff0000\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id: 5,\r\n        colorName: \"Crimson\",\r\n        color: \"#dc143c\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:6,\r\n        colorName: \"Navy\",\r\n        color: \"#000080\",\r\n        selected:false,\r\n    },\r\n    {\r\n        id:7,\r\n        colorName : \"Indigo\",\r\n        color: \"#4b0082\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:8,\r\n        colorName: \"Green\",\r\n        color: \"#008000\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:9,\r\n        colorName:\"OrangeRed\",\r\n        color: \"#ff4500\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id: 10,\r\n        colorName: \"Blue\",\r\n        color: \"#0000ff\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:11,\r\n        colorName: \"Deep Pink\",\r\n        color: \"#ff1493\",\r\n        selected:false,\r\n    },\r\n    {\r\n        id:12,\r\n        colorName : \"Teal\",\r\n        color: \"#008080\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:13,\r\n        colorName: \"Purple\",\r\n        color: \"#800080\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:14,\r\n        colorName:\"Dark Green\",\r\n        color: \"#006400\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id: 15,\r\n        colorName: \"Brown\",\r\n        color: \"#964b00\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id: 16,\r\n        colorName: \"Sky Blue\",\r\n        color: \"#87ceeb\",\r\n        selected:false,\r\n    },\r\n    {\r\n        id: 17,\r\n        colorName : \"Maroon\",\r\n        color: \"#800000\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id:18,\r\n        colorName: \"Lime\",\r\n        color: \"#00ff00\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id: 19,\r\n        colorName:\"Gray\",\r\n        color: \"#808080\",\r\n        selected : false,\r\n    },\r\n    {\r\n        id: 20,\r\n        colorName: \"Gold\",\r\n        color: \"#ffd700\",\r\n        selected : false,\r\n    },\r\n]\r\n\r\nexport default colors;","import React, { useEffect, useState } from \"react\";\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport CardBoard from \"./CardBoard\";\r\nimport ColorCards from \"./Colors\";\r\n\r\nconst CardGame = ()=>{\r\n    const [score, setScore] = useState(0);\r\n    const [bestscore, setBestscore] = useState(0);\r\n    const [cards, setCards] = useState(ColorCards);\r\n    const [win, setWin] = useState(\"none\");\r\n    \r\n    const selectCard = (name)=>{\r\n        let updatedCards = cards.map((card) => {\r\n            if(card.colorName === name){\r\n                return {...card, selected: !card.selected};\r\n            }\r\n            return card;\r\n        })\r\n        setCards(updatedCards);\r\n        setScore(score+1);\r\n    }\r\n    \r\n    const reset = ()=>{\r\n        setScore(0);\r\n        let initialCards = cards.map((card)=>{\r\n            return {...card,selected: false}\r\n        });\r\n        setCards(initialCards);\r\n        setWin(\"none\");\r\n    }\r\n    const winmsg = ()=>{\r\n        setWin(\"block\");\r\n    }\r\n\r\n    useEffect(()=>{\r\n    if(bestscore < score){\r\n        setBestscore(score);\r\n    }\r\n    if(score === 20){\r\n       winmsg();\r\n       setScore(0);\r\n    }\r\n    },[score,bestscore]);\r\n    \r\n    const winstyle ={\r\n        display : `${win}`\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Scoreboard score={score} bestScore={bestscore}></Scoreboard>\r\n            <hr></hr>\r\n            <h1 className=\"win\" style={winstyle}>Congratulations!!</h1>\r\n            <p className=\"again\" style={winstyle} onClick={reset}>Play again!</p>\r\n            <CardBoard \r\n            cards={cards}\r\n            selectCard={selectCard}\r\n            reset = {reset}\r\n            ></CardBoard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardGame;","import './App.css';\nimport Header from './components/Header';\nimport CardGame from './components/CardGame';\n\nconst App = ()=>{\n  return(\n    <div>\n     <Header></Header>\n     <CardGame></CardGame>\n     </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}